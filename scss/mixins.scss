// Mixins
// can be applied to other class
@mixin banner{
    width: 100%;
    position: relative;
    /*
        relative: an element's original position remains in the flow of the document; 'left, top, ...' will work
        absolute: the element is removed from the flow of the document; other elements will behave as if it's not there while positional properties will work on it
        tips: to make a child element positioned absolutely from its parent element instead of doc, we need to use relative on parent
        source: css-tricks, position
    */
    color: white;
    .banner-content{
        position: absolute;   // position the text on the image
        top: 50px;
        width: 100%;
    }
    img{
        width: 100%;
    }
    span{
        font-size: $bannerHeading;
        display: block;              // display text in two lines
        text-transform: uppercase;
        font-weight: bold;
        @include mQ(3000px, 1000px){   // apply when in between these two values
            font-size: 55px;
        }
    }

    span.title{
        font-weight: normal;
        margin-bottom: 30px;
    }
}

@mixin clearFix{
    // to bring back background color
    &:after{
        content: "";
        display: block;   // looks like block only applies to text here
        clear: both;
    }
}

@mixin grid($cols, $mgn){
    float: left;
    margin-right: $mgn;
    margin-bottom: $mgn;
    width: (100% - ($cols - 1) * $mgn) / $cols;
    &:nth-child(#{$cols}n){
        margin-right: 0;
    }
}

// media query
@mixin mQ($arg...){
    @if length($arg) == 1{
        @media screen and (max-width: nth($arg, 1)){
            @content;
        }
    }
    @if length($arg) == 2{
        @media screen and (max-width: nth($arg, 1)) and (min-width: nth($arg, 2)){
            @content;
        }
    }
}